/**
 * ControlP5 Button
 * this example shows how to create buttons with controlP5.
 * by Andreas Schlegel, 2012
 * www.sojamo.de/libraries/controlp5
 * example modified by Andrew Rose, 2019
 */
int grayScale = 0;
import controlP5.*;
int redColor = 0;
int blueColor = 0;
int greenColor = 0;
int thickness=0;
int colorOneRed = 0;
int colorOneBlue = 0;
int colorOneGreen = 0;
int colorTwoRed = 0;
int colorTwoBlue = 0;
int colorTwoGreen = 0;
int coloring1;
int coloring2;

ControlP5 cp5;

int state; 
//0: default, no selection
//1: pencil
//2: eraser

void setup() {
  size(400, 600);

  cp5 = new ControlP5(this);
  
 cp5.addButton("coloring")
    .setPosition(100, 160)
    .setSize(200, 19)
    ;

 cp5.addButton("colorOne")
    .setPosition(100, 120)
    .setSize(200, 19)
    ;
     cp5.addButton("colorTwo")
    .setPosition(100, 140)
    .setSize(200, 19)
    ;
    
    
  // create a new button with name 'pencil'
  cp5.addButton("pencil")
    .setPosition(100, 100)
    .setSize(200, 19)
    ;
  cp5.addButton("eraser")
    .setPosition(100, 80)
    .setSize(200, 19)
    ;
  cp5.addSlider("grayScale")
    .setPosition(100, 20)
    .setRange(0, 255)
    .setValue(128)
    ;
  cp5.addButton("colorOne")
    .setPosition(100, 120)
    .setSize(200, 19)
    ;
  cp5.addSlider("redColor")
    .setPosition(100, 40)
    .setRange(0, 255)
    ;
  cp5.addSlider("greenColor")
    .setPosition(100, 50)
    .setRange(0, 255)
    ;
  cp5.addSlider("blueColor")
    .setPosition(100, 60)
    .setRange(0, 255)
    ;
  cp5.addSlider("thickness")
    .setPosition(100, 30)
    .setRange(0, 255)
    ;

  // 1. add an eraser button

  // 2. add a slider for grayscale value
  // use setValue() to set default grayscale value
  // use setRange() to set a range of values for the slider

  // 3. add sliders for RGB values

  //4. add a slider for stroke thickness

  state = 0;
}

void draw() {
  //buffering
  fill(colorOneRed,colorOneGreen,colorOneBlue);
  rect(5,360,40,40);
  
   fill(colorTwoRed,colorTwoGreen,colorTwoBlue);
  rect(5,300,40,40);

}

void mouseDragged() {
  switch(state) {
  case 0: //Default
    break;
  case 1: //Pencil
    println("drawing");
    strokeWeight(thickness);
    stroke(grayScale);
    line(pmouseX, pmouseY, mouseX, mouseY);
    break;
  case 2: // eraser
    println("erasing");
    stroke(205);
    fill(205);
    ellipse(mouseX, mouseY, 10, 10);
    break;
  case 3: //coloring
    println("coloring");
        strokeWeight(thickness);
    stroke(redColor, greenColor, blueColor);
    line(pmouseX, pmouseY, mouseX, mouseY);
    break;
     case 7: //coloring
    println("coloring1");
    stroke(redColor, greenColor, blueColor);
    line(pmouseX, pmouseY, mouseX, mouseY);
    break;
  case 4: //thickness
    println("Thickness");
    strokeWeight(thickness);
    stroke(redColor, greenColor, blueColor);
    line(pmouseX, pmouseY, mouseX, mouseY);
    break;
    case 5: //colorOne
    println("colorOne");
    colorOneRed = redColor;
    colorOneGreen = greenColor;
    colorOneBlue = blueColor;
    break;
    case 6: //colorOne
    println("colorOne");
    colorTwoRed = redColor;
    colorTwoGreen = greenColor;
    colorTwoBlue = blueColor;
  }
}
//called when pencil button is pressed
void coloring() {
  println("coloring");
  state=3;
  println(state);
  println(redColor);
}
void pencil() {
  println("pencil");
  state = 1;
}
void colorOne() {
  println("coloring1");
  state=5;
  println();
  }
   void colorTwo() {
  println("coloring1");
  state=6;
  println();
   }
   void eraser() {
  println("pencil");
  state = 2;
}
void Thickness() {
  println("Thickness");
  println(state);
  println(thickness);
}


//1. Define a controller function for eraser

//2. Define a controller function for grayscale slider 
//   *use the int value parameter to get the current value of the slider

//3. Define controller functions for RGB sliders

//4. Define controller functions for stroke thickness
